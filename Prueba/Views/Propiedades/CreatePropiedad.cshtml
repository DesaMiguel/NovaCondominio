@model Prueba.ViewModels.CrearUserPropiedadesVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
    var expenseGroupsJson = System.Text.Json.JsonSerializer.Serialize(Model.AvailableExpenseGroups);
}


<div class="container mt-5">
    <div class="container-fluid mb-6">
        <!-- Content Row -->
        <div class="row justify-content-center mb-6">
            <div class="col-lg-10" id="container-madre">
                <form asp-action="CreatePropiedad" method="post">
                    <div class="card shadow mb-4 bg-content-bg">

                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">
                                Registrar Propietario
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <div class="row mb-3">
                                    <!-- First Name -->
                                    <div class="col-6">
                                        <div class="form-floating">
                                            <input asp-for="Nombre"
                                                   class="form-control"
                                                   placeholder="Nombre(s)"
                                                   onfocus="toggleLabelText(this, true)"
                                                   onblur="toggleLabelText(this, false)" />
                                            <label asp-for="Nombre"
                                                   class="form-label"
                                                   data-original="Nombre(s)"
                                                   data-translated="Ingresa tu Nombre">Nombre(s)</label>
                                            <span asp-validation-for="Nombre" class="text-danger"></span>

                                        </div>
                                    </div>
                                    <!-- Last Name -->
                                    <div class="col-6">
                                        <div class="form-floating">
                                            <input asp-for="Rif"
                                                   class="form-control"
                                                   placeholder="Rif/C.I."
                                                   onfocus="toggleLabelText(this, true)"
                                                   onblur="toggleLabelText(this, false)" />
                                            <label asp-for="Rif"
                                                   class="form-label"
                                                   data-original="Rif"
                                                   data-translated="Ingresa tu Rif o C.I.">Rif/C.I</label>
                                            <span asp-validation-for="Rif" class="text-danger"></span>

                                        </div>
                                    </div>
                                </div>
                                <!-- Email -->
                                <div class="form-floating mb-3">
                                    <input asp-for="Email"
                                           class="form-control"
                                           placeholder="Email"
                                           onfocus="toggleLabelText(this, true)"
                                           onblur="toggleLabelText(this, false)" />
                                    <label asp-for="Email"
                                           class="form-label"
                                           Email class="form-label"
                                           data-original="Email"
                                           data-translated="Ingresa tu Email">Email</label>
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                                <!-- Password -->
                                <div class="form-floating mb-3">
                                    <input asp-for="Password"
                                           class="form-control"
                                           placeholder="Contraseña"
                                           onfocus="toggleLabelText(this, true)"
                                           onblur="toggleLabelText(this, false)" />
                                    <label asp-for="Password"
                                           class="form-label"
                                           Email class="form-label"
                                           data-original="Contraseña"
                                           data-translated="Ingresa tu Contraseña">Contraseña</label>
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                </div>
                                <!-- Confirm Password -->
                                <div class="form-floating mb-3">
                                    <input asp-for="ConfirmPassword"
                                           class="form-control"
                                           placeholder="Confirma tu Contraseña" />
                                    <label asp-for="ConfirmPassword" class="form-label">Confirma tu Contraseña</label>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#propertyModal">Agregar Propiedad</button>
                                <button type="submit" class="btn btn-primary">Registrar</button>
                            </div>
                            <hr />

                            <h6 class="mb-5 font-weight-bold text-primary">Propiedades</h6>
                            <div id="propertiesList" class="form-group mb-3">
                                <!-- Lista de propiedades agregadas -->
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para agregar propiedades -->
    <div class="modal fade" id="propertyModal" tabindex="-1" aria-labelledby="propertyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="propertyModalLabel">Agregar Propiedad</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control"
                                   placeholder="Codigo"
                                   onfocus="toggleLabelText(this, true)"
                                   onblur="toggleLabelText(this, false)"
                                   id="propertyName" required>
                            <label class="form-label"
                                   data-original="Codigo"
                                   data-translated="Ingresa el codigo"
                                   for="propertyName">Codigo</label>
                            
                        </div>

                        <div class="form-floating mb-3">
                            <input type="text" class="form-control"
                                   placeholder="Alicuota"
                                   onfocus="toggleLabelText(this, true)"
                                   onblur="toggleLabelText(this, false)"
                                   id="propertyAlicuota" required>
                            <label class="form-label"
                                   data-original="Alicuota"
                                   data-translated="Ingresa la Alicuota"
                                   for="propertyAlicuota">Alicuota</label>
                        </div>

                        <div class="form-floating mb-3">
                            <input type="text" class="form-control"
                                   placeholder="Saldo"
                                   onfocus="toggleLabelText(this, true)"
                                   onblur="toggleLabelText(this, false)"
                                   id="propertySaldo" required>
                            <label class="form-label"
                                   data-original="Saldo"
                                   data-translated="Ingresa el saldo actual"
                                   for="propertySaldo">Saldo</label>
                        </div>

                        <div class="form-floating mb-3">
                            <input type="text" class="form-control"
                                   placeholder="Deuda"
                                   onfocus="toggleLabelText(this, true)"
                                   onblur="toggleLabelText(this, false)"
                                   id="propertyDeuda" required>
                            <label class="form-label"
                                   data-original="Deuda"
                                   data-translated="Ingresa la Deuda"
                                   for="propertyDeuda">Deuda</label>
                        </div>
                    </div>
                    @* <div class="form-group">
                        <label for="expenseGroups">Grupos de Gastos</label>
                        <select multiple class="form-control" id="expenseGroups">
                            @foreach (var group in Model.AvailableExpenseGroups)
                            {
                                <option value="@group.IdGrupoGasto">@group.NombreGrupo</option>
                            }
                        </select>
                    </div> *@
                    <div class="form-group">
                        <label for="expenseGroups">Grupos de Gastos</label>
                        <div id="expenseGroupsContainer">
                            @foreach (var group in Model.AvailableExpenseGroups)
                            {
                                <div class="form-group form-check">
                                    <label class="form-check-label" for="group_@group.Id">
                                        <input type="checkbox"
                                               class="form-check-input"
                                               id="group_@group.Id"
                                               value="@group.Id"
                                               onchange="toggleAlicuotaInput(this)">

                                        @group.Nombre
                                    </label>

                                </div>
                                <div class="form-floating mb-3">
                                    <input type="text"
                                           class="form-control mt-2 d-none"
                                           placeholder="Alicuota"
                                           onfocus="toggleLabelText(this, true)"
                                           onblur="toggleLabelText(this, false)"
                                           id="alicuota_@group.Id">
                                    <label class="form-label d-none"
                                           data-original="Alicuota"
                                           id="alicuota_label_@group.Id"
                                           data-translated="Ingresa la Alicuota">Alicuota</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-secondary" data-dismiss="modal">Cerrar</a>
                    <a class="btn btn-primary" onclick="addProperty()">Agregar</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Pasar los datos del modelo a una variable JavaScript
        const availableExpenseGroups = @Html.Raw(expenseGroupsJson);
        let properties = [];

        function toggleAlicuotaInput(checkbox) {
            const alicuotaInput = document.getElementById('alicuota_' + checkbox.value);
            const alicuotaLabel = document.getElementById('alicuota_label_' + checkbox.value);
            if (checkbox.checked) {
                alicuotaInput.classList.remove('d-none');
                alicuotaLabel.classList.remove('d-none');
                alicuotaInput.required = true;
            } else {
                alicuotaInput.classList.add('d-none');
                alicuotaLabel.classList.add('d-none');
                alicuotaInput.required = false;
            }
        }

        function addProperty() {
            const propertyName = document.getElementById('propertyName').value;
            const propertyAlicuota = document.getElementById('propertyAlicuota').value;
            const propertySaldo = document.getElementById('propertySaldo').value;
            const propertyDeuda = document.getElementById('propertyDeuda').value;

            const expenseGroupsSelect = document.getElementById('expenseGroupsContainer');
            const selectedGroups = Array.from(expenseGroupsContainer.querySelectorAll('input[type="checkbox"]:checked')).map(checkbox => {
                const alicuota = document.getElementById('alicuota_' + checkbox.value).value;
                const label = document.querySelector(`label[for="group_${checkbox.value}"]`).textContent;
                return { id: checkbox.value, name: label, alicuota: alicuota };
            });

            if (propertyName
                && propertyAlicuota
                && propertySaldo
                && propertyDeuda
                && selectedGroups.length > 0) {

                properties.push({
                    name: propertyName,
                    alicuota: propertyAlicuota,
                    saldo: propertySaldo,
                    deuda: propertyDeuda,
                    expenseGroups: selectedGroups
                });

                $('#propertyModal').modal('hide');
                renderProperties();
                document.getElementById('propertyName').value = '';
                document.getElementById('propertyAlicuota').value = '';
                document.getElementById('propertySaldo').value = '';
                document.getElementById('propertyDeuda').value = '';
                expenseGroupsSelect.selectedIndex = -1;
            }
        }

        function renderProperties() {
            const propertiesList = document.getElementById('propertiesList');
            propertiesList.innerHTML = '';
            properties.forEach((property, index) => {
                const propertyHtml = `
                    <div class="card mb-2">
                        <div class="card-body">
                            <h5 class="card-title">${property.name}</h5>
                            <p class="card-text"><strong>Alicuota: </strong> ${property.alicuota}
                            | <strong>Saldo: </strong> ${property.saldo}
                            | <strong>Deuda: </strong> ${property.deuda}
                            </p>
                    <p class="card-text"><strong>Grupos de Gastos:</strong>
                    ${property.expenseGroups.map((group) => `
                        <span>${group.name}</span> - <span>${group.alicuota}</span> |                    
                    `).join('')}
                    </p>
                    <button type="button" class="btn btn-danger" onclick="removeProperty(${index})">Eliminar</button>
                    <input type="hidden" name="Propiedades[${index}].Codigo" value="${property.name}" />
                    <input type="hidden" name="Propiedades[${index}].Alicuota" value="${property.alicuota}" />
                    <input type="hidden" name="Propiedades[${index}].Saldo" value="${property.saldo}" />
                    <input type="hidden" name="Propiedades[${index}].Deuda" value="${property.deuda}" />
                    ${property.expenseGroups.map((group, groupIndex) => `
                        <input type="hidden" name="Propiedades[${index}].Grupos[${groupIndex}].Id" value="${group.id}" />
                        <input type="hidden" name="Propiedades[${index}].Grupos[${groupIndex}].Alicuota" value="${group.alicuota}" />
                    `).join('')}
                        </div>
                    </div>
                `;
                propertiesList.insertAdjacentHTML('beforeend', propertyHtml);
            });
        }

        function removeProperty(index) {
            properties.splice(index, 1);
            renderProperties();
        }

        function adjustCurrencyPosition(input) {
            const symbol = input.closest('.form-floating').querySelector('.currency-symbol');
            if (input.value.trim() !== "") {
                symbol.classList.add('adjusted');
            } else {
                symbol.classList.remove('adjusted');
            }
        }

        function toggleLabelText(input, isFocus) {
            const label = input.closest('.form-floating').querySelector('.form-label');
            if (label) {
                label.textContent = isFocus ? label.getAttribute('data-translated') : label.getAttribute('data-original');
            }
        }
    </script>
}